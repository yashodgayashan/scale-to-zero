---
# Etcd Service for coordination
apiVersion: v1
kind: Service
metadata:
  name: etcd-coordination
  namespace: default
  labels:
    app: etcd-coordination
spec:
  ports:
  - port: 2379
    name: client
    targetPort: 2379
  - port: 2380
    name: peer
    targetPort: 2380
  selector:
    app: etcd-coordination

---
# Etcd StatefulSet for persistent coordination
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd-coordination
  namespace: default
spec:
  serviceName: etcd-coordination
  replicas: 3
  selector:
    matchLabels:
      app: etcd-coordination
  template:
    metadata:
      labels:
        app: etcd-coordination
    spec:
      containers:
      - name: etcd
        image: quay.io/coreos/etcd:v3.5.9
        ports:
        - containerPort: 2379
          name: client
        - containerPort: 2380
          name: peer
        env:
        - name: ETCD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ETCD_INITIAL_CLUSTER
          value: "etcd-coordination-0=http://etcd-coordination-0.etcd-coordination:2380,etcd-coordination-1=http://etcd-coordination-1.etcd-coordination:2380,etcd-coordination-2=http://etcd-coordination-2.etcd-coordination:2380"
        - name: ETCD_INITIAL_CLUSTER_STATE
          value: "new"
        - name: ETCD_INITIAL_CLUSTER_TOKEN
          value: "scale-to-zero-cluster"
        - name: ETCD_LISTEN_CLIENT_URLS
          value: "http://0.0.0.0:2379"
        - name: ETCD_ADVERTISE_CLIENT_URLS
          value: "http://$(ETCD_NAME).etcd-coordination:2379"
        - name: ETCD_LISTEN_PEER_URLS
          value: "http://0.0.0.0:2380"
        - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
          value: "http://$(ETCD_NAME).etcd-coordination:2380"
        - name: ETCD_DATA_DIR
          value: "/var/lib/etcd"
        - name: ETCD_AUTO_COMPACTION_RETENTION
          value: "1"
        volumeMounts:
        - name: etcd-data
          mountPath: /var/lib/etcd
        livenessProbe:
          httpGet:
            path: /health
            port: 2379
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 2379
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
  volumeClaimTemplates:
  - metadata:
      name: etcd-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi

---
# ServiceAccount for scale-to-zero controller
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scale-to-zero-controller
  namespace: default

---
# ClusterRole for scale-to-zero controller
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scale-to-zero-controller
rules:
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]

---
# ClusterRoleBinding for scale-to-zero controller
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: scale-to-zero-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: scale-to-zero-controller
subjects:
- kind: ServiceAccount
  name: scale-to-zero-controller
  namespace: default

---
# ConfigMap for scale-to-zero configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: scale-to-zero-config
  namespace: default
data:
  USE_ETCD_COORDINATION: "true"
  ETCD_ENDPOINTS: "http://etcd-coordination:2379"
  LOG_LEVEL: "info"

---
# DaemonSet for scale-to-zero controller with etcd coordination
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: scale-to-zero-controller
  namespace: default
  labels:
    app: scale-to-zero-controller
spec:
  selector:
    matchLabels:
      app: scale-to-zero-controller
  template:
    metadata:
      labels:
        app: scale-to-zero-controller
    spec:
      serviceAccountName: scale-to-zero-controller
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - operator: Exists
        effect: NoSchedule
      containers:
      - name: scale-to-zero
        image: scale-to-zero:latest
        imagePullPolicy: Never  # For local development
        securityContext:
          privileged: true
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
        env:
        - name: RUST_LOG
          value: "info"
        - name: USE_ETCD_COORDINATION
          valueFrom:
            configMapKeyRef:
              name: scale-to-zero-config
              key: USE_ETCD_COORDINATION
        - name: ETCD_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              name: scale-to-zero-config
              key: ETCD_ENDPOINTS
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: debug
          mountPath: /sys/kernel/debug
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "pgrep testapp"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "pgrep testapp"
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      - name: debug
        hostPath:
          path: /sys/kernel/debug
          type: Directory

---
# Headless service for etcd StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: etcd-coordination-headless
  namespace: default
  labels:
    app: etcd-coordination
spec:
  ports:
  - port: 2379
    name: client
  - port: 2380
    name: peer
  clusterIP: None
  selector:
    app: etcd-coordination

---
# Example service with scale-to-zero annotations for testing
apiVersion: v1
kind: Service
metadata:
  name: example-service
  namespace: default
  annotations:
    scale-to-zero/scale-down-time: "60"
    scale-to-zero/reference: "deployment/example-service"
    scale-to-zero/hpa-enabled: "true"
    scale-to-zero/min-replicas: "2"
    scale-to-zero/max-replicas: "5"
    scale-to-zero/target-cpu-utilization: "70"
spec:
  selector:
    app: example-service
  ports:
  - port: 80
    targetPort: 8080

---
# Example deployment for testing
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-service
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: example-service
  template:
    metadata:
      labels:
        app: example-service
    spec:
      containers:
      - name: app
        image: nginx:alpine
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi 